openapi: 3.0.0
info:
  title: DataLad Registry API
  version: 1.0.0
  description: |
    Endpoints
    ---------
    * Return list of registered URLs for a dataset
    * Add a new URL or announce update of existing one
    * Query status of added URL
    * Return list of known dataset IDs

servers:
  - url: /v1

components:
  schemas:
    ds_id:
      type: string
      format: uuid
      example: 6eeadb86-84be-11e6-b24c-002590f97d84
    url_encoded:
      type: string
      format: byte
      example: aHR0cHM6Ly9kYXRhc2V0cy5kYXRhbGFkLm9yZy9sYWJzL2hheGJ5L3JhaWRlcnMvLmdpdA==
  parameters:
    ds_id:
      name: ds_id
      required: true
      in: path
      description: dataset ID
      schema:
        $ref: "#/components/schemas/ds_id"
    url_encoded:
      name: url_encoded
      required: true
      in: path
      description: dataset URL (base64-encoded)
      schema:
        $ref: "#/components/schemas/url_encoded"
  responses:
    invalid-encoded-url:
      description: invalid encoded URL
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            {
              "message": "Invalid encoded URL"
            }

paths:
  /datasets/{ds_id}/urls:
    parameters:
      - $ref: "#/components/parameters/ds_id"
    get:
      summary: Return list of registered URLs for a dataset
      operationId: dataset_urls.urls.get
      responses:
        "200":
          description: List of registered URLs
          content:
            application/json:
              schema:
                type: object
                properties:
                  ds_id:
                    $ref: "#/components/schemas/ds_id"
                  urls:
                    type: array
                    items:
                      type: string
              example:
                {
                  "ds_id": "6eeadb86-84be-11e6-b24c-002590f97d84",
                  "urls": ["https://datasets.datalad.org/labs/haxby/raiders/.git"]
                }
        "202":
          description: URL submitted
          headers:
            Location:
              description: URL to query for status information
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  ds_id:
                    $ref: "#/components/schemas/ds_id"
                  url_encoded:
                    $ref: "#/components/schemas/url_encoded"
              example:
                {
                  "ds_id": "6eeadb86-84be-11e6-b24c-002590f97d84",
                  "url_encoded": "aHR0cHM6Ly9kYXRhc2V0cy5kYXRhbGFkLm9yZy9sYWJzL2hheGJ5L3JhaWRlcnMvLmdpdA=="
                }
        "400":
          description: invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                {
                  "message": "Invalid data"
                }
  /datasets/{ds_id}/urls/{url_encoded}:
    parameters:
      - $ref: "#/components/parameters/ds_id"
      - $ref: "#/components/parameters/url_encoded"
    get:
      summary: Query status of added URL
      operationId: dataset_urls.url.get
      responses:
        "200":
          description: URL status
          content:
            application/json:
              schema:
                type: object
                properties:
                  ds_id:
                    $ref: "#/components/schemas/ds_id"
                  url:
                    type: string
                  status:
                    description: status of URL
                    type: string
                    enum:
                      - unknown
                      - known
                      - URL pending verification
                      - verification failed
                  info:
                    description: subset of collected information
                    type: object
              example:
                {
                  "ds_id": "6eeadb86-84be-11e6-b24c-002590f97d84",
                  "url": "https://datasets.datalad.org/labs/haxby/raiders/.git",
                  "status": "known",
                  "info": {
                    "annex_uuid": "524f92ba-0490-462a-9c7a-f8e4d928484a",
                    "annex_key_count": 3,
                    "head": "8dcb5e00a00e18e83056c5fe1978afe90d3e9f8f",
                    "head_describe": "v1"
                  },
                }
        "400":
          $ref: "#/components/responses/invalid-encoded-url"
    patch:
      summary: Add new dataset URL or announce existing one has been updated
      operationId: dataset_urls.url.patch
      responses:
        "202":
          description: Announcement received
        "400":
          $ref: "#/components/responses/invalid-encoded-url"
        "404":
          description: Unknown URL
  /datasets:
    get:
      summary: Return list of known dataset IDs
      operationId: datasets.datasets.get
      parameters:
        - in: query
          name: page
          schema:
            type: integer
      responses:
        "200":
          description: List of known dataset IDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  prev:
                    type: string
                    nullable: true
                  next:
                    type: string
                    nullable: true
                  ds_ids:
                    type: array
                    items:
                      $ref: "#/components/schemas/ds_id"
              example:
                {
                  "prev": null,
                  "next": "/v1/datasets?page=2",
                  "ds_ids": ["6eeadb86-84be-11e6-b24c-002590f97d84"]
                }
