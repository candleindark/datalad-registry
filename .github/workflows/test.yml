name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Configure environment
      run: |
        git config --global user.name dl-registry
        git config --global user.email dl-registry@example.com
    - name: Install git-annex
      shell: bash
      run: |
        bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
        sudo apt-get update -qq
        sudo apt-get install eatmydata
        sudo eatmydata apt-get install git-annex-standalone
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install wheel
        pip install mypy types-requests types-PyYAML
        pip install .[tests]
    - name: Remove build artifacts
      run: rm -rf build dist
    - name: Load env vars from env.test to GitHub Actions workflow
      shell: bash
      run: |
        env_file="env.test"

        # Load needed env variables from file
        set -a
        source "$env_file"
        set +a

        # Read each line in the file
        while IFS= read -r line || [[ -n "$line" ]]; do
            # Trim leading and trailing whitespace
            trimmed_line=$(echo "$line" | xargs)
            # Skip empty lines and lines starting with '#'
            if [[ -z "$trimmed_line" || "$trimmed_line" =~ ^# ]]; then
                continue
            fi
            # Extract variable name (part before the first '=')
            variable_name=$(echo "$trimmed_line" | cut -d '=' -f 1)
            echo "$variable_name=${!variable_name}" >> "$GITHUB_ENV"
        done < "$env_file"
    - name: Start services with Docker Compose
      run: docker compose -f docker-compose.test.yml up -d
    - name: Run tests with Coverage
      run: python -m pytest -s -v --cov=. --cov-report=xml
    - name: Stop services provided by Docker Compose
      run: docker compose -f docker-compose.test.yml down
    - name: mypy check
      run: mypy datalad_registry datalad_registry_client
    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
