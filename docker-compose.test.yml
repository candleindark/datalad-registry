services:
  broker:
    image: docker.io/rabbitmq:3-management
    hostname: dlreg-broker
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    ports:
      - "127.0.0.1:${BROKER_PORT_AT_HOST}:5672"
      - "127.0.0.1:${BROKER_MANAGEMENT_PORT_AT_HOST}:15672"
    userns_mode: "keep-id"  # This has an effect only after podman-compose 1.0.3 possibly
      # See https://github.com/containers/podman-compose/issues/166
      # for details.
      # For podman-compose 1.0.3 or earlier, use
      # `PODMAN_USERNS=keep-id podman-compose up`
    healthcheck: # https://www.rabbitmq.com/monitoring.html#health-checks
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3

  # Result backend for Celery
  backend:
    image: docker.io/redis:7
    ports:
      - "127.0.0.1:${BACKEND_PORT_AT_HOST}:6379"

  db:
    image: docker.io/postgres:15
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_INITDB_ARGS: --encoding utf8 --locale C
    ports:
      - "127.0.0.1:${DB_PORT_AT_HOST}:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-q" ]
      interval: 30s
      timeout: 30s
      retries: 3
